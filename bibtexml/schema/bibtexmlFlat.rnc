#  File: $Id: bibtexmlFlat.rnc, 2007.03.16 22:43:00 vidarg Exp $
#
#  This schema expresses XML markup similar to the BibTeX language
#  specified for LaTeX, or actually its content model.
#  For documentation on BibTeX, see
#    http://www.ctan.org/tex-archive/biblio/bibtex/distribs/doc/
#
#  Differences to the strict BibTeXML schema are
#    * Order is irrelevant
#    * Multiple author fields are allowed
#    * Easier on data types (e.g. month, chapter, pages elements)
#    * Arbitrary fields are allowed
#    * Required fields must be present
#    * Fields used by the BibTeX style files are retained
#        for schema-aware XML editors, while other fields
#        are ommitted, but will match an anyOtherElement-rule.
#        E.g. you can use the journal-field on a book,
#        but your editor won't suggest it for you.
#
#  Suggested invocation:
#
#    <?xml version="1.0" encoding="UTF-8"?>
#    <bibtex:file xmlns:bibtex="http://bibtexml.sf.net/">
#    ...
#    </bibtex:file>
#  
#  Available from  http://bibtexml.sf.net/
# 
#  This code originally developed by
#    Vidar Bronken Gundersen
#    Moritz Ringler
# 
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License.
#  See  http://www.gnu.org/copyleft/gpl.html
#


# Namespace and namespace prefix
default namespace bibtex = "http://bibtexml.sf.net/"

# Reuse the strict BibTeXML schema
include "bibtexml.rnc" {

      # Allow any fields in any order
      # Retain required and optional fields to aid schema-aware XML editors,
      article.content = author & title & journal & year & volume? &
         number? & pages? & month? & note? & common.fields.class
      book.content = (author|editor) & title & publisher & year &
         volume? & number? & series? & address? & edition? & month? &
         note? & common.fields.class
      booklet.content = title & author? & howpublished? & address? &
         month? & year? & note? & common.fields.class
      inbook.content = (author|editor) & title & ((chapter & pages?) |
         pages) & publisher & year & volume? & number? & series? & type? &
         address? & edition? & month? & note? & common.fields.class
      incollection.content = author & title & booktitle & publisher & year &
         editor? & volume? & number? & series? & type? & chapter? &
         pages? & address? & edition? & month? & note? & common.fields.class
      inproceedings.content = author & title & booktitle & year &
         editor? & volume? & number? & series? & pages? & address? &
         month? & organization? & publisher? & note? &
         common.fields.class
      manual.content = title & author? & organization? & address? &
         edition? & month? & year? & note? & common.fields.class
      thesis.content = author & title & school & year & type? &
         address? & month? & note? & common.fields.class
      misc.content = author? & title? & howpublished? & month? & year?
         & note? & common.fields.class
      proceedings.content = title & year & editor? & volume? &
         number? & series? & address? & month? & organization? &
         publisher? & note?  & common.fields.class
      techreport.content = author & title & institution & year & type?
         & number? & address? & month? & note? & common.fields.class
      unpublished.content = author & title & note &
         month? & year? & common.fields.class

      # Multiple authors and editors in following tags
      author = element author { attlist.author, text }+
      editor = element editor { attlist.editor, text }+

      # Lighten up on data types
      month = element month { attlist.month, text }
      chapter = element chapter { attlist.chapter, text }
      pages = element pages {
         attlist.pages,
         xsd:string { pattern="[a-zA-Z]?[0-9]+(\([a-zA-Z]\))?((-{0,2}|–|,)[a-zA-Z]?[0-9]+(\([a-zA-Z]\))?)*\+?(\([a-zA-Z]\))?" }
      }
}

# Extend common fields (at this point key? & crossref?)
standard.common.fields.class &= annote?
common.fields.class &= user.fields.class
common.fields.class &= anyOtherElement*


## Popular user fields
##   BibTeX is extremely popular, and many people have used it to store
##   information. Below is a list of some of the more common fields.
##   When using BibTeX with LaTeX you need BibTeX style files
##   to print these data.
##   Ref: http://www.ecst.csuchico.edu/~jacobsd/bib/formats/bibtex.html
user.fields.class =
   abstract?
 & affiliation?
 & contents?
 & copyright?
 & (isbn | issn)?
 & doi?
 & keywords?
 & language?
 & lccn?
 & location?
 & mrnumber?
 & price?
 & size?
 & url?
 & category?

abstract =
## [abstract]  An abstract of the work. 
   element abstract { text }

affiliation =
## [affiliation]  The authors affiliation. 
   element affiliation { text }

contents =
## [contents]  A Table of Contents 
   element contents { text }

copyright =
## [copyright]  Copyright information. 
   element copyright { text }

isbn =
## [ISBN]  The International Standard Book Number.
##    Every ISBN consist of 13 digits, divided into five parts of
##    variable length, separated by a hyphen. After January 1, 2007,
##    the ISBN-13 officially becomes "ISBN"; and the use of the
##    ISBN-10 should be phased out.
   element isbn { ISBN-10.datatype | ISBN-13.datatype }
ISBN-10.datatype = xsd:string { pattern="(\d(-{0,2}|–| )){9}[\dX]" }
ISBN-13.datatype = xsd:string { pattern="(\d(-{0,2}|–| )){12}[0-9X]" }

issn =
## [ISSN]  The International Standard Serial Number. 
##         Used to identify a journal. 
   element issn { ISSN.datatype }
ISSN.datatype = xsd:string { pattern="\d{4}(-{0,2}|–)\d{4}" }

language =
## [language]  The language the document is in. 
   element language { xsd:language }

lccn =
## [LCCN]  The Library of Congress Call Number.
##         I've also seen this as lib-congress. 
   element lccn { text }

location =
## [location]  A location associated with the entry,
##             such as the city in which a conference took place.
   element location { text }

mrnumber =
## [mrnumber]  The Mathematical Reviews number. 
   element mrnumber { text }

price =
## [price]  The price of the document. 
   element price { text }

size =
## [size]  The physical dimensions of a work. 
   element size { text }

url =
## [URL]  The WWW Universal Resource Locator that points to the item being
##        referenced. This often is used for technical reports to point to the
##        ftp site where the postscript source of the report is located.
   element url { xsd:anyURI }

keywords =
## [keywords]  Key words used for searching or possibly for annotation. 
   element keywords { text }

category =
## [category]  Category of this bibitem
   element category { text }

doi =
## [DOI]  The Digital Object Identifier
##        used to redirect to articles, a key like 10.1000/203
##        Ref: http://www.doi.org/
   element doi { xsd:string { pattern="\d{0,2}\.\d{0,4}/.*" } }

# end of user fields


## Change keywords content to allow multiple keywords
keywords |= element keyword { text }+


## Arbitrary element names are allowed.
##   Examples of such fields are
##   acknowledgement, comment, owner, class
anyOtherElement = element * - (
   address
 | annote
 | author
 | booktitle
 | chapter
 | crossref
 | edition
 | editor
 | howpublished
 | institution
 | journal
 | key
 | month
 | note
 | number
 | organization
 | pages
 | publisher
 | school
 | series
 | title
 | type
 | volume
 | year
 | abstract
 | affiliation
 | contents
 | copyright
 | isbn | issn
 | doi
 | keywords
 | language
 | lccn
 | location
 | mrnumber
 | price
 | size
 | url
 | category
 ) { text }
