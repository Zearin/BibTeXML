<?xml version="1.0"?>
<!-- $Id: bibxml2html.xsl 133 2007-03-19 17:38:30Z ringler $

  I wrote this style-sheet to generate bibliography entries
  that I could copy-paste into a hand-made MS Word bibliography
  written by a co-author.
  It is not very polished, and probably only works for articles.

 (c) Moritz Ringler, 2007

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; either version 2
 of the License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

-->
<xsl:transform version="2.0"
        xmlns:bibtex="http://bibtexml.sf.net/"
        xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:fn="http://www.w3.org/2003/11/xpath-functions"
    xmlns:foo="http://foo/bar/baz"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    exclude-result-prefixes="bibtex foo fn xs">
  <xsl:output
      method="xhtml"
      indent="yes"
      version="1.0"
      doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
      doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN"
   />

  <xsl:template match="/">
    <html>
      <head>
        <title>References</title>
        <link href="default.css" type="text/css" rel="stylesheet"/>
    <meta name="creator"
      content="BibTeXConverter"/>
    <script type="text/javascript" src="toggle.js"/>
      </head>
      <body>
    <h1>References</h1>
    <p style="font-family:Arial,Helvetica,sans-serif; font-size:8pt; color:#aaaaaa">Generated on <xsl:value-of select="current-dateTime()"/></p>
    <xsl:apply-templates select="bibtex:file" />
<address>
Generated by BibTeXConverter<br />
Style sheet: <xsl:text>$Id: bibxml2html.xsl 133 2007-03-19 17:38:30Z ringler $</xsl:text> by Moritz Ringler, 2003-2006
</address>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="bibtex:file">
  <ol>
    <xsl:apply-templates select="bibtex:entry">
           <xsl:sort select="@id"/>
    </xsl:apply-templates>
  </ol>
  </xsl:template>

  <xsl:template match="bibtex:entry">
       <li>
       <xsl:value-of select="@id"/><br />
    <xsl:apply-templates select="*/bibtex:author"/><xsl:text> </xsl:text>
    <i><xsl:value-of select="*/bibtex:journal"/></i><xsl:text> </xsl:text>
    <b><xsl:value-of select="*/bibtex:year"/></b>,<xsl:text> </xsl:text>
    <i><xsl:value-of select="*/bibtex:volume"/></i><xsl:text>,</xsl:text><xsl:text> </xsl:text>
    <xsl:apply-templates select="*/bibtex:pages"/><xsl:text>.</xsl:text>
    </li>
  </xsl:template>

  <xsl:template name="author" match="*/bibtex:author">
    <xsl:apply-templates select="foo:parse-author(.)/foo:person"/>
    <xsl:if test="not(position() eq last())"><xsl:text>;</xsl:text></xsl:if>
    <xsl:text> </xsl:text>
  </xsl:template>

  <xsl:template match="foo:person">
    <xsl:value-of select="foo:last"/><xsl:text>,</xsl:text>
    <xsl:for-each select="tokenize(foo:first,'\s+')">
        <xsl:text> </xsl:text><xsl:value-of select="substring(.,0,2)" /><xsl:text>.</xsl:text>
    </xsl:for-each>
  </xsl:template>

  <xsl:template match="bibtex:pages">
    <xsl:value-of select="if (contains(.,'-')) then substring-before(.,'-') else ."/>
  </xsl:template>

   <xsl:function name="foo:parse-author">
       <xsl:param name="author-raw" as="xs:string"/>
       <!-- asterisk is not allowed in author, keywords or periodical name
                 see http://www.refman.com/support/risformat_fields_02.asp -->
       <xsl:variable name="author" select="normalize-space(replace($author-raw, '\*', ''))"/>
       <xsl:variable name="parts" select="tokenize($author, ',')" />
       <xsl:variable name="numparts" select="count($parts)" />
        <xsl:variable name="result">
            <foo:person>
                <xsl:choose>
                   <xsl:when test="$numparts ge 3">
                    <!-- von last, junior, first -->
                        <foo:first><xsl:value-of select="normalize-space($parts[3])" /></foo:first>
                        <foo:junior><xsl:value-of select="normalize-space($parts[2])" /></foo:junior>
                        <foo:last><xsl:value-of select="normalize-space($parts[1])" /></foo:last>
                    </xsl:when>
                    <xsl:when test="$numparts eq 2">
                    <!-- von last, first -->
                        <foo:first><xsl:value-of select="normalize-space($parts[2])" /></foo:first>
                        <foo:last><xsl:value-of select="normalize-space($parts[1])" /></foo:last>
                    </xsl:when>
                    <xsl:otherwise>
                    <!-- first von last -->
                        <xsl:choose>
                            <xsl:when test="matches(normalize-space($author), ' \p{Ll}')">
                                <!-- we have a word starting with a lowercase char, must be a von particle -->
                                <foo:first><xsl:value-of select="normalize-space(replace($author, '^(.*?) (\p{Ll}.*)$', '$1'))"/></foo:first>
                                <foo:last><xsl:value-of select="normalize-space(replace($author, '^(.*?) (\p{Ll}.*)$', '$2'))"/></foo:last>
                            </xsl:when>
                            <xsl:when test="matches(normalize-space($author), ' \p{Lu}')">
                                <foo:first><xsl:value-of select="normalize-space(replace($author, '^(.*) (\p{Lu}.*)$', '$1'))"/></foo:first>
                                <foo:last><xsl:value-of select="normalize-space(replace($author, '^(.*) (\p{Lu}.*)$', '$2'))"/></foo:last>
                            </xsl:when>
                            <xsl:otherwise>
                                <foo:last><xsl:value-of select="normalize-space($author)"/></foo:last>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
            </foo:person>
        </xsl:variable>
        <xsl:sequence select="$result"/>
    </xsl:function>

</xsl:transform>
