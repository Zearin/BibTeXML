# $Id: bibtexml-groups.rnc 180 2007-03-26 21:35:16Z vidarg $
#
#  This schema expresses XML markup similar to the BibTeX language
#  specified for LaTeX, or actually its content model.
#  For documentation on BibTeX, see
#    http://www.ctan.org/tex-archive/biblio/bibtex/distribs/doc/
#
#  Suggested invocation:
#
#    <?xml version="1.0" encoding="UTF-8"?>
#    <bibtex:file xmlns:bibtex="http://bibtexml.sf.net/">
#    ...
#    </bibtex:file>
#
#  Available from  http://bibtexml.sf.net/
#
#  This code originally developed by
#    Moritz Ringler
#    Vidar Bronken Gundersen
#    Zeger W. Hendrikse
#    Marco Kuhlmann
#
# This is a generic master schema from which schemas
# with specific features can be derived using schema.xsl.
# The idea is taken from
# http://osteele.com/archives/2004/08/xml-schema-versions
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License.
#  See  http://www.gnu.org/copyleft/gpl.html
#

# Namespace and namespace prefix
default namespace bibtex = "http://bibtexml.sf.net/"
namespace m = "http://bibtexml.sourceforge.net/version-annotations"
namespace dc = "http://purl.org/dc/elements/1.1/"

# Document top element
start = file
file = element file { file.attlist, metadata?, entry* }

file.attlist  &= attribute structure {
    [ m:structure="flat" ] ( "flat" ) |
    [ m:structure="nested" ] ( "nested" ) |
    [ m:structure="inline" ] ( "inline" ) 
}?

file.attlist &= attribute fields {
    [ m:fields="core" ] ( "core" ) |
    [ m:fields="user" ] ( "user" ) |
    [ m:fields="arbitrary" ] ( "arbitrary" )
}?

file.attlist &= attribute datatypes {
    [ m:datatypes="strict" ] ( "strict" ) |
    [ m:datatypes="loose" ] ( "loose" )
}?

metadata = element metadata { metadata.dc }
metadata.dc = (element (dc:*){ text })*

# .....................................................................
# Main structure


## Each entry may contain one of the bibliographic types.
standard.entries.class =
      article
    | book
    | booklet
    | manual
    | techreport
    | mastersthesis
    | phdthesis
    | inbook
    | incollection
    | proceedings
    | inproceedings
    | conference
    | unpublished
    | misc
entry.content = standard.entries.class
entry = element entry { attlist.entry, entry.content }
attlist.entry &=
   ## Citation key
   attribute id { xsd:ID }


# .....................................................................
# Parameter entities

person = 
[m:structure="nested"] (givennames? & surname & jr?) | text

givennames = element givennames { text }
surname = element surname { text }
jr = element jr { text }

author = element author { person }
authors = element authors { author+ }

editor = element editor { person }
editors = element editors { editor+ }

author.required = 
    [m:structure="inline"] (author) |
    [m:structure="flat"] (author+) |
    [m:structure="nested"] (authors)

author.optional =
    [m:structure="inline"] (author?) |
    [m:structure="flat"] (author*) |
    [m:structure="nested"] (authors?)
    
editor.required = 
    [m:structure="inline"] (editor) |
    [m:structure="flat"] (editor+) |
    [m:structure="nested"] (editors)
    
editor.optional =
    [m:structure="inline"] (editor?) |
    [m:structure="flat"] (editor*) |
    [m:structure="nested"] (editors?)

authorOrEditor.required = author.required | editor.required

authorOrEditor.arbitrary = author.optional & editor.optional

volumeOrNumber =
        [ m:fields="core user" ] ((volume | number)?) |
        [ m:fields="arbitrary" ] (volume? & number?)
# .....................................................................
# Entries in the BibTeX database

article = 
## [article] An article from a journal or magazine.
##   Required fields: author, title, journal, year.
##   Optional fields: volume, number, pages, month, note.
element article {
   article.required  &
   article.optional &
   [ m:fields="user arbitrary"] ( article.user )
}

article.required =
    [ m:fields="core user" ] ( author.required & title  & journal  & year ) |
    [ m:fields="arbitrary" ] ( author.optional & title? & journal? & year?)

article.optional = volume? & number? & pages? & month? & note?

article.user =
    user.elements & 
    (element ( * - ( 
    (
        author | authors | title | journal | year |
        volume | number | pages | month | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



book = 
## [book] A book with an explicit publisher.
##   Required fields: author or editor, title, publisher, year.
##   Optional fields: volume or number, series, address,
##      edition, month, note.
element book {
    book.required &
    book.optional &
    [ m:fields="user arbitrary"] ( book.user* )
}

book.required =
    [ m:fields="core user" ] ( authorOrEditor.required & title  & publisher  & year ) |
    [ m:fields="arbitrary" ] ( authorOrEditor.arbitrary & title? & publisher? & year?)

book.optional =
    volumeOrNumber & series? & address? & edition? & month? & note?

book.user =
    user.elements &
    (element ( * - ( 
    (
        author | authors | editor | editors | title | publisher | year |
        volume | number | series | address | edition | month | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



booklet = 
## [booklet] A work that is printed and bound, but without a named
##   publisher or sponsoring institution
##   Required field: title.
##   Optional fields: author, howpublished, address, month, year, note.
element booklet {
    booklet.required &
    booklet.optional &
    [ m:fields="user arbitrary"] ( booklet.user )
}

booklet.required =
    [ m:fields="core user" ] ( title ) |
    [ m:fields="arbitrary" ] ( title? )

booklet.optional =
    author.optional & howpublished? & address? & month? & year? & note?

booklet.user =
    user.elements &
    (element ( * - ( 
    (
        title |
        author | authors | howpublished | address | month | year | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



inbook = 
## [inbook] A part of a book, which may be a chapter (or section or
##   whatever) and/or a range of pages.
##   Required fields: author or editor, title, chapter and/or pages,
##      publisher, year.
##   Optional fields: volume or number, series, type, address,
##      edition, month, note.
element inbook {
    inbook.required &
    inbook.optional &
    [ m:fields="user arbitrary"] ( inbook.user )
}

inbook.required =
    [ m:fields="core user" ] (
        authorOrEditor.required &
        title &
        ((chapter & pages?) | pages) &
        publisher &
        year
    ) |
    [ m:fields="arbitrary" ] (
        authorOrEditor.arbitrary &
        title? &
        chapter? &
        pages? &
        publisher? &
        year?
     )

inbook.optional =
    volumeOrNumber & series? & type? & address? & edition? & month? & note?

inbook.user =
    user.elements &
    (element ( * - ( 
    (
       author | authors | editor | editors | title | chapter | pages | publisher | year |
       volume | number | series | type | address | edition | month | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



incollection = 
## [incollection] A part of a book having its own title.
##   Required fields: author, title, booktitle, publisher, year.
##   Optional fields: editor, volume or number, series, type,
##      chapter, pages, address, edition, month, note.
element incollection {
    incollection.required   &
    incollection.optional &
   [ m:fields="user arbitrary"] ( incollection.user )
}

incollection.required =
    [ m:fields="core user" ] (
        author.required &
        title &
        booktitle &
        publisher &
        year
    ) |
    [ m:fields="arbitrary" ] (
        author.optional &
        title? &
        booktitle? &
        publisher? &
        year?
    )

incollection.optional =
    editor.optional & volumeOrNumber & series? & type? & chapter? & pages? & address? &
    edition? & month? & note?

incollection.user =
    user.elements &
    (element ( * - ( 
    (
        author | authors | title | booktitle | publisher | year |
        editor | editors | volume | number | series | type | chapter | pages | address |
        edition | month | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



inproceedings = 
## [inproceedings] An article in a conference proceedings.
##   Required fields: author, title, booktitle, year.
##   Optional fields: editor, volume or number, series, pages,
##      address, month, organization, publisher, note.
element inproceedings { inproceedings.content }

inproceedings.content =
   inproceedings.required &
   inproceedings.optional &
   [ m:fields="user arbitrary"] ( inproceedings.user )

inproceedings.required =
    [ m:fields="core user" ] (author.required & title  & booktitle  & year) |
    [ m:fields="arbitrary" ] (author.optional & title? & booktitle? & year?)

inproceedings.optional =
  editor.optional & volumeOrNumber? & series? & pages? & address? & month? &
  organization? & publisher? & note?

inproceedings.user =
    user.elements &
    (element ( * - ( 
    (
        author | authors | title | booktitle | year |
        editor | editors | volume | number | series | pages | address | month |
        organization | publisher | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



conference =  
## [conference] The same as INPROCEEDINGS,
##   included for Scribe compatibility.
element conference { inproceedings.content }



manual = 
## [manual] Technical documentation
##   Required field: title.
##   Optional fields: author, organization, address,
##      edition, month, year, note.
element manual {
    manual.required &
    manual.optional &
   [ m:fields="user arbitrary"] ( manual.user )
}

manual.required =
    [ m:fields="core user" ] ( title ) |
    [ m:fields="arbitrary" ] ( title? )

manual.optional =
    author.optional & organization? & address? & edition? & month? & year? &
    note?

manual.user =
    user.elements &
    (element ( * - ( 
    (
        title | author | authors | organization | address | edition | month | year |
        note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



## %thesis; mastersthesis and phdthesis are identical
##   Required fields: author, title, school, year.
##   Optional fields: type, address, month, note.
thesis.content =
    thesis.required &
    thesis.optional &
   [ m:fields="user arbitrary"] ( thesis.user )

thesis.required =
    [ m:fields="core user" ] ( author.required & title  & school  & year  ) |
    [ m:fields="arbitrary" ] ( author.optional & title? & school? & year? )

thesis.optional =
    type? & address? & month? & note?

thesis.user =
    user.elements &
    (element ( * - ( 
    (
        author | authors | title | school | year |
        type | address | month | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



mastersthesis = 
## [mastersthesis] A Master's thesis.
##   Required fields: author, title, school, year.
##   Optional fields: type, address, month, note.
element mastersthesis { thesis.content }



phdthesis = 
## [phdthesis] A PhD thesis.
##   Required fields: author, title, school, year.
##   Optional fields: type, address, month, note.
element phdthesis { thesis.content }



misc = 
## [misc] Use this type when nothing else fits.
##   Required fields: none.
##   Optional fields: author, title, howpublished, month, year, note.
element misc {
   misc.optional &
   [ m:fields="user arbitrary"] ( misc.user )
}

misc.optional =
    author.optional & title? & howpublished? & month? & year? & note?

misc.user =
    user.elements &
    (element ( * - ( 
    (
        author | authors | title | howpublished | month | year | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



proceedings = 
## [proceedings] The proceedings of a conference.
##   Required fields: title, year.
##   Optional fields: editor, volume or number, series,
##      address, month, organization, publisher, note.
element proceedings {
   proceedings.required &
   proceedings.optional &
   [ m:fields="user arbitrary"] ( proceedings.user )
}

proceedings.required =
   [ m:fields="core user" ] ( title  & year ) |
   [ m:fields="arbitrary" ] ( title? & year? )

proceedings.optional =
    editor.optional & volumeOrNumber & series? & address? & month? & organization? &
    publisher & note?

proceedings.user =
    user.elements &
    (element ( * - ( 
    (
        title | year |
        volume | number | editor | editors | series | address | month | organization |
        publisher | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



techreport = 
## [techreport] A report published by a school or other institution,
##   usually numbered within a series.
##   Required fields: author, title, institution, year.
##   Optional fields: type, number, address, month, note.
element techreport {
    techreport.required &
    techreport.optional &
   [ m:fields="user arbitrary"] ( techreport.user )
}

techreport.required =
    [ m:fields="core user" ] ( author.required & title  & institution  & year )|
    [ m:fields="arbitrary" ] ( author.optional & title? & institution? & year? )

techreport.optional =
    type? & number? & address? & month? & note?

techreport.user =
    user.elements &
    (element ( * - ( 
    (
        author | authors | title | institution | year |
        type | number | address | month | note
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*



unpublished = 
## [unpublished] A document having an author and title, but not
##   formally published.
##   Required fields: author, title, note.
##   Optional fields: month, year.
element unpublished {
    unpublished.required &
    unpublished.optional &
   [ m:fields="user arbitrary"] ( unpublished.user )
}

unpublished.required =
    [ m:fields="core user" ] ( author.required & title & note ) |
    [ m:fields="arbitrary" ] ( author.optional & title? & note? )

unpublished.optional =
    month? & year?

unpublished.user =
    user.elements &
    (element ( * - ( 
    (
        author | authors | title | note |
        month | year
    ) | ( 
        abstract |  affiliation |  contents |  copyright |  isbn |  doi |  
        keywords |  language |  lccn |  location |  mrnumber |  price |  
        size |  url |  category 
     )
     )){ text })*


# .....................................................................
# Metadata fields for each bibliographic entry

address = 
## [address] Usually the address of the publisher or other type of
##   institution  For major publishing houses, van~Leunen recommends
##   omitting the information entirely.  For small publishers, on the other
##   hand, you can help the reader by giving the complete address.
element address { text }



booktitle = 
## [booktitle] Title of a book, part of which is being cited.  See the
##   LaTeX book for how to type titles.  For book entries, use the title
##   field instead.
element booktitle { text }

chapter =  
## [chapter] A chapter (or section or whatever) number.
element chapter { xsd:positiveInteger }

edition = 
## [edition] The edition of a book-for example, ``Second''.  This
##   should be an ordinal, and should have the first letter capitalized, as
##   shown here; the standard styles convert to lower case when necessary.
element edition { [ m:datatypes="strict"] xsd:string { pattern="[A-Z].*" } |
                            [ m:datatypes="loose"   ] text }

howpublished = 
## [howpublished] How something strange has been published.
##   The first word should be capitalized.
element howpublished { text }

institution = 
## [institution] The sponsoring institution of a technical report.
element institution { text }

journal = 
## [journal] A journal name.  Abbreviations are provided for many
##   journals; see the Local Guide.
element journal { text }

month = 
## [month] The month in which the work was published or, for an
##   unpublished work, in which it was written. You should use the
##   standard three-letter abbreviation, as described in Appendix B.1.3 of
##   the LaTeX book.
##   The schema also allows a two digit month format, e.g. 05 (for May).
element month { [ m:datatypes="strict" ] ( monthString.datatype | xsd:gMonth ) |
                        [ m:datatypes="loose"] text }
monthString.datatype =
   string "Jan"
 | string "Feb"
 | string "Mar"
 | string "Apr"
 | string "May"
 | string "Jun"
 | string "Jul"
 | string "Aug"
 | string "Sep"
 | string "Oct"
 | string "Nov"
 | string "Dec"

note = 
## [note] Any additional information that can help the reader.
##   The first word should be capitalized.
element note { text }

number = 
## [number] The number of a journal, magazine, technical report, or of a
##   work in a series.  An issue of a journal or magazine is usually
##   identified by its volume and number; the organization that issues a
##   technical report usually gives it a number; and sometimes books are
##   given numbers in a named series.
element number { text }

organization = 
## [organization] The organization that sponsors a conference or that
##   publishes a manual.
element organization { text }

pages = 
## [pages] One or more page numbers or range of numbers, such as 42-111
##   or 7,41,73-97 or 43+ (the `+' in this last example indicates pages
##   following that don't form a simple range).  To make it easier to
##   maintain Scribe-compatible databases, the standard styles convert a
##   single dash (as in 7-33) to the double dash used in TeX to denote
##   number ranges (as in 7-33).
element pages {
    [ m:datatypes="strict" ] xsd:string { pattern="[0-9]+((-{0,2}|–|,)[0-9]+)*\+?" } |
    [m:datatypes="loose" ] text
}

publisher = 
## [publisher] The publisher's name.
element publisher { text }

school = 
## [school] The name of the school where a thesis was written
element school {  text }

series = 
## [series] The name of a series or set of books.  When citing an entire
##   book, the the title field gives its title and an optional series field
##   gives the name of a series or multi-volume set in which the book is
##   published.
element series { text }

title = 
## [title] The work's title, typed as explained in the LaTeX book.
element title { text }

type =   
## [type] The type of a technical report-for example, ``Research Note''.
element type { text }

volume = 
## [volume] The volume of a journal or multivolume book.
element volume { text }

year = 
## [year] The year of publication or, for an unpublished work, the year
##   it was written.  Generally it should consist of four numerals, such as
##   1984, although the standard styles can handle any year whose last four
##   nonpunctuation characters are numerals, such as `(about 1984)'.
##   The schema will restrict validation of the year to four numerals,
##   as such a type is pre-defined in XML Schema.
element year { xsd:gYear }

annote = 
## [annote] An annotation  It is not used by the standard bibliography
##   styles, but may be used by others that produce an annotated
##   bibliography.
element annote { text }

crossref = 
## [crossref] The database key of the entry being cross referenced.
##   BibTEX has a new cross-referencing feature, explained by an example.
##     @INPROCEEDINGS(no-gnats,
##         crossref = "gg-proceedings",
##     @PROCEEDINGS(gg-proceedings,
element crossref { xsd:NCName }

key = 
## [key] Used for alphabetizing, cross referencing, and creating a label
##   when the ``author'' information (described in Section [ref: ] is
##   missing. This field should not be confused with the key that appears
##   in the \cite command and at the beginning of the database entry.
##
##   In addition to the fields listed above, each entry type also has
##   an optional key field, used in some styles for alphabetizing, or
##   for forming a \bibitem label. You should include a key field for
##   any entry whose ``author'' information is missing;
element key { text }

## Popular user fields
##   BibTeX is extremely popular, and many people have used it to store
##   information. Below is a list of some of the more common fields.
##   When using BibTeX with LaTeX you need BibTeX style files
##   to print these data.
##   Ref: http://www.ecst.csuchico.edu/~jacobsd/bib/formats/bibtex.html
user.elements =
  abstract?
& affiliation?
& contents?
& copyright?
& isbn?
& doi?
& keywords*
& language?
& lccn?
& location?
& mrnumber?
& price?
& size?
& url?
& category*

abstract =
  ## [abstract]  An abstract of the work.
  element abstract { text }

affiliation =
  ## [affiliation]  The authors affiliation.
  element affiliation { text }

contents =
  ## [contents]  A Table of Contents
  element contents { text }

copyright =
  ## [copyright]  Copyright information.
  element copyright { text }

isbn =
  ## [ISBN]  The International Standard Book Number.
  ##    Every ISBN consist of 13 digits, divided into five parts of
  ##    variable length, separated by a hyphen. After January 1, 2007,
  ##    the ISBN-13 officially becomes "ISBN"; and the use of the
  ##    ISBN-10 should be phased out.
  element isbn { ISBN-10.datatype | ISBN-13.datatype }
ISBN-10.datatype = xsd:string { pattern="(\d(-{0,2}|–| )){9}[\dX]" }
ISBN-13.datatype = xsd:string { pattern="(\d(-{0,2}|–| )){12}[0-9X]" }

issn =
  ## [ISSN]  The International Standard Serial Number.
  ##         Used to identify a journal.
  element issn { ISSN.datatype }
ISSN.datatype = xsd:string { pattern="\d{4}(-{0,2}|–)\d{4}" }

language =
  ## [language]  The language the document is in.
  element language { xsd:language }

lccn =
  ## [LCCN]  The Library of Congress Call Number.
  ##         I've also seen this as lib-congress.
  element lccn { text }

location =
  ## [location]  A location associated with the entry,
  ##             such as the city in which a conference took place.
  element location { text }

mrnumber =
  ## [mrnumber]  The Mathematical Reviews number.
  element mrnumber { text }

price =
  ## [price]  The price of the document.
  element price { text }

size =
  ## [size]  The physical dimensions of a work.
  element size { text }

url =
  ## [URL]  The WWW Universal Resource Locator that points to the
  ##    item being referenced. This often is used for technical
  ##    reports to point to the ftp site where the postscript
  ##    source of the report is located.
  element url { xsd:anyURI }

keywords =
  ## [keywords]  Key words used for searching or possibly for annotation.
  element keywords { text }

category =
  ## [category]  Category of this bibitem
  element category { text }

doi =
  ## [DOI]  The Digital Object Identifier
  ##    used to redirect to articles, a key like 10.1000/203
  ##    Ref: http://www.doi.org/
  element doi { xsd:string { pattern="\d{0,2}\.\d{0,4}/.*" } }
